module mem;

foreign {
    malloc: fn(size: int) -> opaqueptr;
    free: fn(ptr: opaqueptr);
}

pub fn alloc(comptime T: type) -> *T {
    let allocation = malloc(@sizeOf(T));
    let cast: *T = @cast(allocation);
    return cast;
}

pub fn alloc_buffer(comptime T: type, size: int) -> *T {
    let allocation = malloc(size * @sizeOf(T));
    let cast: *T = @cast(allocation);
    return cast;
}
