module fmt;

use core:strings;

foreign {
    write: fn(fd: int, data: *byte, count: int) -> int;
    read: fn(fd: int, data: *byte, count: int) -> int;
    // magic fn im just gonna define for now
    write_int: fn(data: int);
}

// pub fn int_to_string(x: int) -> str {
// 
// }


pub fn println(msg: String) {
    write(1, msg.bytes(), msg.len());
    let n_byte: *byte = @cast("\n");
    write(1, n_byte, 1);
}

pub fn print(msg: String) {
    write(1, msg.bytes(), msg.len());
}

pub fn print_int(x: int) {
    write_int(x);
}
